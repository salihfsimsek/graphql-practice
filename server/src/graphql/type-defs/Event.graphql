type Query {
  events: [Event!]!
  event(id: ID!): Event!
}

type Mutation {
  createEvent(data: CreateEventInput!): Event!
  updateEvent(id: ID!, data: UpdateEventInput!): Event!
  deleteEvent(id: ID!): DeleteOutput!
  deleteAllEvents: DeleteAllOutput!
}

type Subscription {
  eventCreated: Event!
  eventCount: Int!
}

type Event {
  id: ID!
  title: String!
  description: String!
  date: String!
  from: String!
  to: String!
  poster: String!
  user: User!
  location: Location!
  participants: [Participant!]!
}

input CreateEventInput {
  title: String!
  description: String!
  date: String!
  from: String!
  to: String!
  poster: String!
  location: ID!
  user: ID!
}

input UpdateEventInput {
  title: String
  description: String
  date: String
  from: String
  poster: String
  to: String
  location: ID
  user: ID
}
